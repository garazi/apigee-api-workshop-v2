swagger: "2.0"
info:
  version: "0.9.0"
  title: "OAuth 2.0 token operations"
  description: "OAuth 2.0 token operations"
  contact:
    name: "Volos Team"
    url: "https://github.com/apigee-127/volos"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "localhost"
basePath: "/oauth"
schemes:
  - "http"
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /authorize:
    get:
      description: "OAuth 2.0 authorize endpoint"
      summary: "OAuth 2.0 authorize endpoint"
      x-swagger-router-controller: volos-oauth
      operationId: "authorize"
      produces:
        - "application/json"
      parameters:
        -
          name: "client_id"
          in: "query"
          description: "The client id"
          required: true
          type: "string"
        -
          name: "response_type"
          in: "query"
          description: "The response type (token | code)"
          required: true
          type: "string"
        -
          name: "state"
          in: "query"
          description: "A state string"
          required: false
          type: "string"
        -
          name: "redirect_uri"
          in: "query"
          description: "The redirect url"
          required: false
          type: "string"
        -
          name: "scope"
          in: "query"
          description: "The requested scopes (space delimited)"
          required: false
          type: "string"
      responses:
        302:
          description: "Code response (redirect)"
        default:
          description: "Error payload"
          schema:
            $ref: "#/definitions/OAuthError"
  /token:
    post:
      description: "OAuth 2.0 token endpoint"
      summary: "OAuth 2.0 token endpoint"
      x-swagger-router-controller: volos-oauth
      operationId: "token"
      produces:
        - "application/json"
      parameters:
        -
          name: "grant_type"
          in: "formData"
          description: "Grant Type"
          required: true
          type: "string"
        -
          name: "client_id"
          in: "formData"
          description: "The client id"
          required: false
          type: "string"
        -
          name: "state"
          in: "formData"
          description: "A state string"
          required: false
          type: "string"
        -
          name: "scope"
          in: "formData"
          description: "The requested scopes (space delimited)"
          required: false
          type: "string"
        -
          name: "authorization"
          in: "header"
          description: "The authorization header"
          required: false
          type: "string"
        -
          name: "username"
          in: "formData"
          description: "The user name"
          required: false
          type: "string"
        -
          name: "password"
          in: "formData"
          description: "The password"
          required: false
          type: "string"
      responses:
        200:
          description: "Token payload"
          schema:
            $ref: "#/definitions/OAuthToken"
        default:
          description: "Error payload"
          schema:
            $ref: "#/definitions/OAuthError"
  /invalidate:
    post:
      description: "OAuth 2.0 token endpoint"
      summary: "OAuth 2.0 token endpoint"
      x-swagger-router-controller: volos-oauth
      operationId: "invalidate"
      produces:
        - "application/json"
      parameters:
        -
          name: "token"
          in: "formData"
          description: "The token to invalidate"
          required: true
          type: "string"
        -
          name: "client_id"
          in: "formData"
          description: "The client id"
          required: false
          type: "string"
        -
          name: "client_secret"
          in: "formData"
          description: "The client secret"
          required: false
          type: "string"
        -
          name: "token_type_hint"
          in: "formData"
          description: "Token type hint"
          required: false
          type: "string"
        -
          name: "authorization"
          in: "header"
          description: "The authorization header"
          required: false
          type: "string"
      responses:
        200:
          description: "Success response"
        default:
          description: "Error payload"
          schema:
            $ref: "#/definitions/OAuthError"
  /refresh:
    post:
      description: "OAuth 2.0 refresh token endpoint"
      summary: "OAuth 2.0 refresh token endpoint"
      x-swagger-router-controller: volos-oauth
      operationId: "refresh"
      produces:
        - "application/json"
      parameters:
        -
          name: "grant_type"
          in: "formData"
          description: "Grant Type"
          required: true
          type: "string"
        -
          name: "refresh_token"
          in: "formData"
          description: "The refresh token"
          required: true
          type: "string"
        -
          name: "client_id"
          in: "formData"
          description: "The client id"
          required: false
          type: "string"
        -
          name: "client_secret"
          in: "formData"
          description: "The client secret"
          required: false
          type: "string"
        -
          name: "authorization"
          in: "header"
          description: "The authorization header"
          required: false
          type: "string"
      responses:
        200:
          description: "Token payload"
          schema:
            $ref: "#/definitions/OAuthToken"
        default:
          description: "Error payload"
          schema:
            $ref: "#/definitions/OAuthError"
definitions:
  OAuthToken:
    required:
      - "access_token"
    properties:
      access_token:
        type: "string"
      token_type:
        type: "string"
      expires_in:
        type: "integer"
      refresh_token:
        type: "string"
      scope:
        type: "string"
  OAuthError:
    required:
      - "error"
      - "error_description"
    properties:
      error:
        type: "string"
      error_description:
        type: "string"
      state:
        type: "string"
